import os

config_json = (
    '{"Sync_Dir": "Documents/sync_grive", "Sync_Cycle": 1, "Auto_Start": false}'
)
formats_json = '{\n  "application/vnd.google-apps.spreadsheet": ".xlsx",\n  "application/vnd.google-apps.form": ".xlsx",\n  "application/vnd.google-apps.document": ".docx",\n  "application/vnd.google-apps.presentation": ".pptx"\n}'

mime_dict_json = "{\n  \"application/vnd.google-apps.spreadsheet\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  \"application/vnd.google-apps.form\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  \"application/vnd.google-apps.document\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n  \"application/vnd.google-apps.presentation\": \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n  \"folder\": \"application/vnd.google-apps.folder\",\n  \"audio_file_mimelist\" : \"['audio/mpeg', 'audio/x-mpeg-3', 'audio/mpeg3', 'audio/aiff', 'audio/x-aiff', 'audio/m4a', 'audio/mp4', 'audio/flac', 'audio/mp3']\",\n  \"movie_file_mimelist\" : \"['video/mp4', 'video/x-msvideo', 'video/mpeg', 'video/flv', 'video/quicktime', 'video/mkv']\",\n  \"image_file_mimelist\" : \"['image/png', 'image/jpeg', 'image/jpg', 'image/tiff']\",\n  \"document_file_mimelist\" : \"['application/powerpoint', 'applciation/mspowerpoint','application/x-mspowerpoint', 'application/pdf','application/x-dvi','application/vnd.ms-htmlhelp','application/x-mobipocket-ebook','application/vnd.ms-publisher']\",\n  \"google_docs_re\" : \"application/vnd.google-apps\"\n}"

readme = "\n                                        Grive by Tokyo Team\n\n        Grive is a command-line client for Google Drive which lets you easily sync file between your local drive\n        and Google Drive cloud storage.\n        It lets you upload, download & share documents, photos, and other important files with anyone from anywhere.\n\n        The parameters that can be used are:\n\n            * -re\n                Reset account associated with Google Drive.\n                Automatically executed at the first run of Grive\n\n            * -st\n                Start the automatic Grive syncing of the folders set as upload directories\n\n            * -x\n                Stop the automatic Grive syncing of the folders set as upload directories\n\n            * -y\n                Shows whether Grive is uploading automatically or not.\n\n            * -v\n                Shows the current version of the Grive.\n\n            * -xs\n                Restore Grive to the default.\n\n            * -c : Gives option to edit the configuration file\n                Sync Folder: The directory where the files are synchronized\n                    (e.g. for \"~/Documents/sync_grive\", can input \"Documents/sync_grive\" or absolute path)\n                    (Default is \"sync_grive\" directory in your Documents folder)\n                Synchronous Cycle (Minute): Integer in range 1 ~ 60\n                        (Default is '1' minute)\n                Network Speed Limitation: Integer in range 1 ~ 5120 KB/s\n                    (e.g. for limit download rate to 100 KB/s, can input \"3 download 100\",\n                          for disable download limitation, input 3 download n)\n                    (Default upload (download) is False)\n                Run at startup: [Y/N]\n                    'Y' Start up with the system and vise versa\n                    (Default is 'Y')\n                Configuration is stored in config.json as a dictionary which can be manually edited as well\n\n            * -ls [local/remote]\n                Lists all files and folders in your Google Drive (default or when \"remote\" used)\n                Lists all files and folders in your downloads directory (when \"local\" used)\n\n            * -ls_trash : Lists all files and folders in your Google Drive trash\n\n            * -ls_folder [folder_id] : Lists files and folders in the given folder id in your drive\n\n            * -ls_files [folder_id/\"root\"] : Lists all files recursively present in the folder id given\n\n            * -d [file_id1] [file_id2]: Downloads the given file from your Google Drive\n                User '-do' option with overwrite mode\n                Save at the corresponding location on remote\n                Multiple files can be downloaded by putting file_ids one after the other\n\n              -df [file_id1] [file_id2] [folder]\n                User '-dfo' option with overwrite mode\n                Specify the location to save the file at the end of the command\n\n            * -u [file_name/folder_name] : Upload file/folder corresponding to the root given to Google Drive.\n                -uf: Upload file/folder to selected location on Google Drive.\n                -uo: Upload file/folder corresponding to the address given to Google Drive and overwrite mode.\n\n            * -q [file_name/folder_name]: Exclude file/folder when upload, sync.\n                -qc [file_name/folder_name]: Remove from exclusion list.\n\n            * -sy [folder_name]: Sync specified folder to Google drive\n\n            * -s [file_id] ([mail]) : Outputs the shareable link of the file\n                    Multiple mails can be specified by putting mail one after another\n                    Don't specify [mail] to share/unshare with share mode \"every one\"\n                -sr     : Share with 'reader' permission\n                -sw     : Share with 'writer' permission\n                -us     : Unshare file ( Specified [mail] = 'all' to unshare file completely)\n\n\n            * -restore [file_id] : Restore files from trash.\n\n            * -da [file_id/folder_id]\n                Delete the mentioned file from Google Drive sync directory and Google Drive remote.\n                You can add multiple file_ids/folder_ids one after the other, e.g. -d [file_id1] [file_id2]\n                -dl [file_name/folder_name] : Delete the mentioned file from Google Drive sync directory\n                -dr [file_id/folder_id] : Delete the mentioned file from Google Drive remote\n\n            * -open, -o  :  Opens the Sync Directory in file explorer\n\n            * -help, -h  :  Show user manual\n"

version_info = "\n                          Grive 1.0.0\n                    --Made by Tokyo Team--\n                https://github.com/Tokyo-VN-2018\nA simple program to sync your folders with your Google Drive Account.\n\n"


def restore_default():
    dir_path = os.path.dirname(os.path.realpath(__file__))
    if os.path.exists(os.path.join(dir_path, "config_dicts")) is False:
        os.mkdir(os.path.join(dir_path, "config_dicts"))
    if os.path.exists(os.path.join(dir_path, "docs")) is False:
        os.mkdir(os.path.join(dir_path, "docs"))
    f = open("config_dicts/config.json", "w")
    f.write(config_json)
    f.close()
    f = open("config_dicts/formats.json", "w")
    f.write(formats_json)
    f.close()
    f = open("config_dicts/mime_dict.json", "w")
    f.write(mime_dict_json)
    f.close()
    f = open("docs/readme.txt", "w")
    f.write(readme)
    f.close()
    f = open("docs/version_info.txt", "w")
    f.write(version_info)
    f.close()
